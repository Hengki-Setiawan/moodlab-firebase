{
  "entities": {
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a portfolio project for the Mood Lab website.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project."
        },
        "title": {
          "type": "string",
          "description": "Title of the project."
        },
        "description": {
          "type": "string",
          "description": "Description of the project."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the project's image.",
          "format": "uri"
        },
        "category": {
          "type": "string",
          "description": "Category of the project (e.g., 'TikTok Content', 'Instagram Campaign')."
        },
        "client": {
          "type": "string",
          "description": "Name of the client for the project."
        },
        "caseStudyUrl": {
          "type": "string",
          "description": "URL to the project's case study (optional).",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "imageUrl",
        "category",
        "client"
      ]
    },
    "ContactSubmission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactSubmission",
      "type": "object",
      "description": "Represents a contact form submission from the Mood Lab website.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact submission."
        },
        "name": {
          "type": "string",
          "description": "Name of the person submitting the form."
        },
        "email": {
          "type": "string",
          "description": "Email address of the person submitting the form.",
          "format": "email"
        },
        "companyName": {
          "type": "string",
          "description": "Company name of the person submitting the form."
        },
        "message": {
          "type": "string",
          "description": "Message from the person submitting the form."
        },
        "submissionDate": {
          "type": "string",
          "description": "Date and time the form was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "companyName",
        "message",
        "submissionDate"
      ]
    },
    "TeamMember": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TeamMember",
      "type": "object",
      "description": "Represents a team member at Mood Lab.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the team member."
        },
        "name": {
          "type": "string",
          "description": "Name of the team member."
        },
        "title": {
          "type": "string",
          "description": "Job title of the team member."
        },
        "bio": {
          "type": "string",
          "description": "Biography of the team member."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the team member's image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "name",
        "title",
        "bio",
        "imageUrl"
      ]
    },
    "DigitalProduct": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DigitalProduct",
      "type": "object",
      "description": "Represents a digital product offered by Mood Lab.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the digital product."
        },
        "name": {
          "type": "string",
          "description": "Name of the digital product."
        },
        "description": {
          "type": "string",
          "description": "Description of the digital product."
        },
        "price": {
          "type": "number",
          "description": "Price of the digital product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the digital product's image.",
          "format": "uri"
        },
        "category": {
          "type": "string",
          "description": "Category of the product."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL to the downloadable file."
        },
        "imageHint": {
            "type": "string",
            "description": "Hint for AI to generate a better image."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "price",
        "imageUrl",
        "category",
        "fileUrl",
        "imageHint"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/digitalProducts/{digitalProductId}",
        "definition": {
          "entityName": "DigitalProduct",
          "schema": {
            "$ref": "#/backend/entities/DigitalProduct"
          },
          "description": "Stores digital product information.",
          "params": [
            {
              "name": "digitalProductId",
              "description": "Unique identifier for the digital product."
            }
          ]
        }
      },
      {
        "path": "/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/backend/entities/Project"
          },
          "description": "Stores project portfolio information.",
          "params": [
            {
              "name": "projectId",
              "description": "Unique identifier for the project."
            }
          ]
        }
      },
      {
        "path": "/contactSubmissions/{contactSubmissionId}",
        "definition": {
          "entityName": "ContactSubmission",
          "schema": {
            "$ref": "#/backend/entities/ContactSubmission"
          },
          "description": "Stores contact form submissions.",
          "params": [
            {
              "name": "contactSubmissionId",
              "description": "Unique identifier for the contact submission."
            }
          ]
        }
      },
      {
        "path": "/teamMembers/{teamMemberId}",
        "definition": {
          "entityName": "TeamMember",
          "schema": {
            "$ref": "#/backend/entities/TeamMember"
          },
          "description": "Stores team member information.",
          "params": [
            {
              "name": "teamMemberId",
              "description": "Unique identifier for the team member."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage digital products, projects, contact submissions, and team member information for Mood Lab. The core principle is to ensure authorization independence and simplify security rules.  Since user-specific private data is not present, and all data is generally public-facing content managed by administrators, a simple collection-based structure is sufficient. Each entity (Project, ContactSubmission, TeamMember, DigitalProduct) resides in its own top-level collection. This structural segregation simplifies rules and enables QAPs. There's no requirement for denormalization to achieve authorization independence in this scenario, as authorization will be handled via server-side logic (Cloud Functions) rather than client-side rules.\n\nThis design supports the required QAPs.  List operations are inherently safe because each collection contains only one type of data with consistent security needs.  Because all writes will be done via an authenticated admin (using a backend), the database structure allows for listing all documents in each collection, allowing the Mood Lab admin to have full content control."
  }
}
