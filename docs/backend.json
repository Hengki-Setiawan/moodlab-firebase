{
  "entities": {
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a portfolio project for the Mood Lab website.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project.",
          "format": "uuid"
        },
        "title": {
          "type": "string",
          "description": "The title of the project."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the project."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image representing the project.",
          "format": "uri"
        },
        "category": {
          "type": "string",
          "description": "Category of the project (e.g., 'Konten TikTok', 'Kampanye Instagram')."
        },
        "clientName": {
          "type": "string",
          "description": "The name of the client for the project."
        },
        "caseStudyUrl": {
          "type": "string",
          "description": "URL to the detailed case study of the project (optional).",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "imageUrl",
        "category",
        "clientName"
      ]
    },
    "ContactSubmission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactSubmission",
      "type": "object",
      "description": "Represents a contact form submission from the Mood Lab website.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact submission.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The name of the person submitting the form."
        },
        "email": {
          "type": "string",
          "description": "The email address of the person submitting the form.",
          "format": "email"
        },
        "companyName": {
          "type": "string",
          "description": "The name of the company or UMKM."
        },
        "message": {
          "type": "string",
          "description": "The message content from the contact form."
        },
        "submissionDate": {
          "type": "string",
          "description": "The date and time when the form was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "companyName",
        "message",
        "submissionDate"
      ]
    },
    "TeamMember": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TeamMember",
      "type": "object",
      "description": "Represents a team member profile for the Mood Lab website.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the team member.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The name of the team member."
        },
        "title": {
          "type": "string",
          "description": "The job title of the team member."
        },
        "bio": {
          "type": "string",
          "description": "A brief biography of the team member."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image representing the team member.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "name",
        "title",
        "bio",
        "imageUrl"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a user's transaction for a digital product.",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "The unique order ID from Midtrans."
        },
        "productName": {
          "type": "string",
          "description": "Name of the purchased product."
        },
        "amount": {
          "type": "number",
          "description": "The transaction amount."
        },
        "transactionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the transaction."
        },
        "status": {
          "type": "string",
          "description": "The status of the transaction (e.g., 'success', 'pending', 'failure')."
        },
        "userId": {
          "type": "string",
          "description": "The UID of the user who made the transaction."
        }
      },
      "required": [
        "orderId",
        "productName",
        "amount",
        "transactionTime",
        "status",
        "userId"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/backend/entities/Project"
          },
          "description": "Stores project information. Publicly readable, admin-only write.",
          "params": [
            {
              "name": "projectId",
              "description": "The unique identifier of the project."
            }
          ]
        }
      },
      {
        "path": "/contactSubmissions/{contactSubmissionId}",
        "definition": {
          "entityName": "ContactSubmission",
          "schema": {
            "$ref": "#/backend/entities/ContactSubmission"
          },
          "description": "Stores contact form submissions. Admin-only read and write.",
          "params": [
            {
              "name": "contactSubmissionId",
              "description": "The unique identifier of the contact submission."
            }
          ]
        }
      },
      {
        "path": "/teamMembers/{teamMemberId}",
        "definition": {
          "entityName": "TeamMember",
          "schema": {
            "$ref": "#/backend/entities/TeamMember"
          },
          "description": "Stores team member information. Publicly readable, admin-only write.",
          "params": [
            {
              "name": "teamMemberId",
              "description": "The unique identifier of the team member."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": {
            "$ref": "#/backend/entities/Transaction"
          },
          "description": "Stores a user's transaction history. Readable only by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The user's unique ID."
            },
            {
              "name": "transactionId",
              "description": "The transaction's unique ID (can be the orderId)."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage portfolio projects, contact form submissions, and team member information for the Mood Lab website. It prioritizes authorization independence by using path-based ownership for private data. Structural segregation ensures that each collection contains documents with similar security requirements. This design also accounts for listing operations (QAPs) by storing data in dedicated collections, making rules simple and secure.\n\nSpecifically:\n\n*   `projects`: Stores project data.\n*   `contactSubmissions`: Stores contact form submissions. Admin-only access.\n*   `teamMembers`: Stores team member information. Publicly readable but admin-writable.\n*   `/users/{userId}/transactions`: A subcollection to store the transaction history for each user, ensuring that a user can only read their own transactions."
  }
}
